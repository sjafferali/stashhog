name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]

# Cancel in-progress runs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-xdist
        
    - name: Run backend tests
      run: |
        cd backend
        pytest
  
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --watchAll=false
        
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-xdist
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Backend linting
      run: |
        cd backend
        black --check app/
        isort --check-only app/
        flake8 app/ --max-line-length=88
        mypy app/ --ignore-missing-imports
        
    - name: Frontend linting
      run: |
        cd frontend
        npm run lint
        npm run format:check
        npm run type-check
  
  security-quick:
    name: Security Quick Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'
        ignore-unfixed: true
  
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: high
  
  docker-build-test:
    name: Test Docker Build (Parallel)
    runs-on: ubuntu-latest
    # No dependencies - runs in parallel with tests
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub (for cache)
      if: github.actor != 'dependabot[bot]'
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Test Docker build with cache
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: stashhog:pr-${{ github.event.pull_request.number }}
        # Registry cache only for performance comparison
        cache-from: type=registry,ref=docker.io/${{ github.repository }}:buildcache
        cache-to: type=registry,ref=docker.io/${{ github.repository }}:buildcache,mode=max
        build-args: |
          BUILDTIME=${{ github.event.pull_request.updated_at }}
          VERSION=pr-${{ github.event.pull_request.number }}
          REVISION=${{ github.event.pull_request.head.sha }}