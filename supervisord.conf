[supervisord]
nodaemon=true
user=appuser
logfile=/logs/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=/run/supervisord.pid

[unix_http_server]
file=/run/supervisor.sock
chmod=0700
chown=appuser:appuser

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///run/supervisor.sock

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=true
priority=10
stdout_logfile=/logs/nginx_stdout.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=5
stderr_logfile=/logs/nginx_stderr.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=5
stopasgroup=true
killasgroup=true
stopsignal=QUIT

[program:backend]
command=python -m uvicorn backend.app.main:app --host 127.0.0.1 --port 8000 --workers %(ENV_API_WORKERS)s --log-config /app/backend/logging.json
directory=/app
autostart=true
autorestart=true
priority=20
stdout_logfile=/logs/backend_stdout.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=5
stderr_logfile=/logs/backend_stderr.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=5
stopasgroup=true
killasgroup=true
stopsignal=TERM
stopwaitsecs=30
environment=
    PYTHONPATH="/app/backend",
    PATH="/home/appuser/.local/bin:/usr/local/bin:/usr/bin:/bin",
    APP_ENV="production"

[program:scheduler]
command=python -m backend.app.scheduler
directory=/app
autostart=true
autorestart=true
priority=30
stdout_logfile=/logs/scheduler_stdout.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=5
stderr_logfile=/logs/scheduler_stderr.log
stderr_logfile_maxbytes=10MB
stderr_logfile_backups=5
stopasgroup=true
killasgroup=true
environment=
    PYTHONPATH="/app/backend",
    PATH="/home/appuser/.local/bin:/usr/local/bin:/usr/bin:/bin",
    APP_ENV="production"

[program:log-rotate]
command=/usr/local/bin/log-rotate.sh
autostart=true
autorestart=true
priority=100
stdout_logfile=/logs/logrotate.log
stderr_redirect=true

[group:stashhog]
programs=nginx,backend,scheduler

[eventlistener:process_monitor]
command=python -m backend.app.monitor
events=PROCESS_STATE_FATAL,PROCESS_STATE_EXITED
autostart=true
autorestart=true
stdout_logfile=/logs/monitor.log
stderr_logfile=/logs/monitor_error.log